{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NarayaniSuresh/CSE340/blob/main/CA4%20CSE340%20MACHINE%20LEARNING%201%20PCOS\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# New Section"
      ],
      "metadata": {
        "id": "hbJUqxBEV5o6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## LIBRARY\n"
      ],
      "metadata": {
        "id": "qbvOo2YnV7p-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "from matplotlib_venn import venn3\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_auc_score\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "import matplotlib.ticker as mtick\n"
      ],
      "metadata": {
        "id": "wxzBQMUGV_l1"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv(\"PCOS_data.csv\")"
      ],
      "metadata": {
        "id": "Brpz5JiXWIsw"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.sample(4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "IDudspioWL0L",
        "outputId": "27599568-4f18-4f43-8188-066617d8961b"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Sl. No  Patient File No.  PCOS (Y/N)   Age (yrs)  Weight (Kg)  \\\n",
              "425     426               426           1          37         59.0   \n",
              "29       30                30           1          28         56.0   \n",
              "430     431               431           1          25         65.0   \n",
              "114     115               115           1          29         74.0   \n",
              "\n",
              "     Height(Cm)    BMI  Blood Group  Pulse rate(bpm)   RR (breaths/min)  ...  \\\n",
              "425        148.0  26.9           11                74                20  ...   \n",
              "29         152.0  24.2           13                78                22  ...   \n",
              "430        154.0  27.4           13                72                20  ...   \n",
              "114        162.0  28.2           15                72                18  ...   \n",
              "\n",
              "     Fast food (Y/N)  Reg.Exercise(Y/N)  BP _Systolic (mmHg)  \\\n",
              "425              1.0                  0                  120   \n",
              "29               1.0                  0                  110   \n",
              "430              0.0                  1                  120   \n",
              "114              0.0                  1                  110   \n",
              "\n",
              "     BP _Diastolic (mmHg)  Follicle No. (L)  Follicle No. (R)  \\\n",
              "425                    80                 8                12   \n",
              "29                     80                11                10   \n",
              "430                    80                 4                 6   \n",
              "114                    80                14                 5   \n",
              "\n",
              "     Avg. F size (L) (mm) Avg. F size (R) (mm)  Endometrium (mm)  Unnamed: 44  \n",
              "425                  17.0                 0.17              11.2          NaN  \n",
              "29                   13.0                14.00               5.0          NaN  \n",
              "430                  13.0                14.00               7.6          NaN  \n",
              "114                  15.0                14.00               8.7          NaN  \n",
              "\n",
              "[4 rows x 45 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3f55267-cb26-4ddb-a45f-cf79de5ab842\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sl. No</th>\n",
              "      <th>Patient File No.</th>\n",
              "      <th>PCOS (Y/N)</th>\n",
              "      <th>Age (yrs)</th>\n",
              "      <th>Weight (Kg)</th>\n",
              "      <th>Height(Cm)</th>\n",
              "      <th>BMI</th>\n",
              "      <th>Blood Group</th>\n",
              "      <th>Pulse rate(bpm)</th>\n",
              "      <th>RR (breaths/min)</th>\n",
              "      <th>...</th>\n",
              "      <th>Fast food (Y/N)</th>\n",
              "      <th>Reg.Exercise(Y/N)</th>\n",
              "      <th>BP _Systolic (mmHg)</th>\n",
              "      <th>BP _Diastolic (mmHg)</th>\n",
              "      <th>Follicle No. (L)</th>\n",
              "      <th>Follicle No. (R)</th>\n",
              "      <th>Avg. F size (L) (mm)</th>\n",
              "      <th>Avg. F size (R) (mm)</th>\n",
              "      <th>Endometrium (mm)</th>\n",
              "      <th>Unnamed: 44</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>426</td>\n",
              "      <td>426</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>59.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>26.9</td>\n",
              "      <td>11</td>\n",
              "      <td>74</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>80</td>\n",
              "      <td>8</td>\n",
              "      <td>12</td>\n",
              "      <td>17.0</td>\n",
              "      <td>0.17</td>\n",
              "      <td>11.2</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>1</td>\n",
              "      <td>28</td>\n",
              "      <td>56.0</td>\n",
              "      <td>152.0</td>\n",
              "      <td>24.2</td>\n",
              "      <td>13</td>\n",
              "      <td>78</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>110</td>\n",
              "      <td>80</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>13.0</td>\n",
              "      <td>14.00</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>431</td>\n",
              "      <td>431</td>\n",
              "      <td>1</td>\n",
              "      <td>25</td>\n",
              "      <td>65.0</td>\n",
              "      <td>154.0</td>\n",
              "      <td>27.4</td>\n",
              "      <td>13</td>\n",
              "      <td>72</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>80</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>13.0</td>\n",
              "      <td>14.00</td>\n",
              "      <td>7.6</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>115</td>\n",
              "      <td>115</td>\n",
              "      <td>1</td>\n",
              "      <td>29</td>\n",
              "      <td>74.0</td>\n",
              "      <td>162.0</td>\n",
              "      <td>28.2</td>\n",
              "      <td>15</td>\n",
              "      <td>72</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>110</td>\n",
              "      <td>80</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>15.0</td>\n",
              "      <td>14.00</td>\n",
              "      <td>8.7</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows × 45 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3f55267-cb26-4ddb-a45f-cf79de5ab842')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e3f55267-cb26-4ddb-a45f-cf79de5ab842 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e3f55267-cb26-4ddb-a45f-cf79de5ab842');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cb2bcad2-7bad-4f24-8f98-31a19dd8a7d0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb2bcad2-7bad-4f24-8f98-31a19dd8a7d0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cb2bcad2-7bad-4f24-8f98-31a19dd8a7d0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WIkYa58nWc8i",
        "outputId": "6a27bb3e-fb04-47f9-950d-6d6b881f0bf8"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 541 entries, 0 to 540\n",
            "Data columns (total 45 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   Sl. No                  541 non-null    int64  \n",
            " 1   Patient File No.        541 non-null    int64  \n",
            " 2   PCOS (Y/N)              541 non-null    int64  \n",
            " 3    Age (yrs)              541 non-null    int64  \n",
            " 4   Weight (Kg)             541 non-null    float64\n",
            " 5   Height(Cm)              541 non-null    float64\n",
            " 6   BMI                     541 non-null    float64\n",
            " 7   Blood Group             541 non-null    int64  \n",
            " 8   Pulse rate(bpm)         541 non-null    int64  \n",
            " 9   RR (breaths/min)        541 non-null    int64  \n",
            " 10  Hb(g/dl)                541 non-null    float64\n",
            " 11  Cycle(R/I)              541 non-null    int64  \n",
            " 12  Cycle length(days)      541 non-null    int64  \n",
            " 13  Marraige Status (Yrs)   540 non-null    float64\n",
            " 14  Pregnant(Y/N)           541 non-null    int64  \n",
            " 15  No. of abortions        541 non-null    int64  \n",
            " 16    I   beta-HCG(mIU/mL)  541 non-null    float64\n",
            " 17  II    beta-HCG(mIU/mL)  541 non-null    object \n",
            " 18  FSH(mIU/mL)             541 non-null    float64\n",
            " 19  LH(mIU/mL)              541 non-null    float64\n",
            " 20  FSH/LH                  541 non-null    float64\n",
            " 21  Hip(inch)               541 non-null    int64  \n",
            " 22  Waist(inch)             541 non-null    int64  \n",
            " 23  Waist:Hip Ratio         541 non-null    float64\n",
            " 24  TSH (mIU/L)             541 non-null    float64\n",
            " 25  AMH(ng/mL)              541 non-null    object \n",
            " 26  PRL(ng/mL)              541 non-null    float64\n",
            " 27  Vit D3 (ng/mL)          541 non-null    float64\n",
            " 28  PRG(ng/mL)              541 non-null    float64\n",
            " 29  RBS(mg/dl)              541 non-null    float64\n",
            " 30  Weight gain(Y/N)        541 non-null    int64  \n",
            " 31  hair growth(Y/N)        541 non-null    int64  \n",
            " 32  Skin darkening (Y/N)    541 non-null    int64  \n",
            " 33  Hair loss(Y/N)          541 non-null    int64  \n",
            " 34  Pimples(Y/N)            541 non-null    int64  \n",
            " 35  Fast food (Y/N)         540 non-null    float64\n",
            " 36  Reg.Exercise(Y/N)       541 non-null    int64  \n",
            " 37  BP _Systolic (mmHg)     541 non-null    int64  \n",
            " 38  BP _Diastolic (mmHg)    541 non-null    int64  \n",
            " 39  Follicle No. (L)        541 non-null    int64  \n",
            " 40  Follicle No. (R)        541 non-null    int64  \n",
            " 41  Avg. F size (L) (mm)    541 non-null    float64\n",
            " 42  Avg. F size (R) (mm)    541 non-null    float64\n",
            " 43  Endometrium (mm)        541 non-null    float64\n",
            " 44  Unnamed: 44             2 non-null      object \n",
            "dtypes: float64(19), int64(23), object(3)\n",
            "memory usage: 190.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AMljU8oVWiDS",
        "outputId": "7e872bd6-2c6c-4ac0-ef6b-d083cfbdbd33"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Sl. No                      0\n",
              "Patient File No.            0\n",
              "PCOS (Y/N)                  0\n",
              " Age (yrs)                  0\n",
              "Weight (Kg)                 0\n",
              "Height(Cm)                  0\n",
              "BMI                         0\n",
              "Blood Group                 0\n",
              "Pulse rate(bpm)             0\n",
              "RR (breaths/min)            0\n",
              "Hb(g/dl)                    0\n",
              "Cycle(R/I)                  0\n",
              "Cycle length(days)          0\n",
              "Marraige Status (Yrs)       1\n",
              "Pregnant(Y/N)               0\n",
              "No. of abortions            0\n",
              "  I   beta-HCG(mIU/mL)      0\n",
              "II    beta-HCG(mIU/mL)      0\n",
              "FSH(mIU/mL)                 0\n",
              "LH(mIU/mL)                  0\n",
              "FSH/LH                      0\n",
              "Hip(inch)                   0\n",
              "Waist(inch)                 0\n",
              "Waist:Hip Ratio             0\n",
              "TSH (mIU/L)                 0\n",
              "AMH(ng/mL)                  0\n",
              "PRL(ng/mL)                  0\n",
              "Vit D3 (ng/mL)              0\n",
              "PRG(ng/mL)                  0\n",
              "RBS(mg/dl)                  0\n",
              "Weight gain(Y/N)            0\n",
              "hair growth(Y/N)            0\n",
              "Skin darkening (Y/N)        0\n",
              "Hair loss(Y/N)              0\n",
              "Pimples(Y/N)                0\n",
              "Fast food (Y/N)             1\n",
              "Reg.Exercise(Y/N)           0\n",
              "BP _Systolic (mmHg)         0\n",
              "BP _Diastolic (mmHg)        0\n",
              "Follicle No. (L)            0\n",
              "Follicle No. (R)            0\n",
              "Avg. F size (L) (mm)        0\n",
              "Avg. F size (R) (mm)        0\n",
              "Endometrium (mm)            0\n",
              "Unnamed: 44               539\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = data.drop([\"Sl. No\", \"Patient File No.\",  \"Unnamed: 44\"], axis=1)"
      ],
      "metadata": {
        "id": "DNRwirZdWlz2"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"PCOS (Y/N)\"].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3tl_gPZPWoRa",
        "outputId": "073f6912-773b-4b23-b100-f7ff4e77a5fa"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PCOS (Y/N)\n",
              "0    364\n",
              "1    177\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df[\"PCOS (Y/N)\"].value_counts()\n",
        "\n",
        "# Plotting the pie chart\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.pie(counts, labels=counts.index, colors=['skyblue', 'salmon'], autopct='%1.1f%%', startangle=140)\n",
        "plt.title('PCOS (Y/N) Distribution')\n",
        "plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n",
        "\n",
        "# Adding legend\n",
        "plt.legend(labels=['Yes', 'No'], loc=\"best\")\n",
        "info_text = \"Yes means 1\\nNo means 0\"\n",
        "plt.text(1.2, 0, info_text, fontsize=12, bbox=dict(facecolor='white', alpha=0.5))\n",
        "plt.axis('equal')\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 495
        },
        "id": "n0AW9srzWp4J",
        "outputId": "39d8f910-f539-4d17-bf62-2262fe4c1dc0"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QwjX65JFabWR",
        "outputId": "a64d7ffd-e17c-40a2-c7d5-61857f1d51b9"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['PCOS (Y/N)', ' Age (yrs)', 'Weight (Kg)', 'Height(Cm) ', 'BMI',\n",
              "       'Blood Group', 'Pulse rate(bpm) ', 'RR (breaths/min)', 'Hb(g/dl)',\n",
              "       'Cycle(R/I)', 'Cycle length(days)', 'Marraige Status (Yrs)',\n",
              "       'Pregnant(Y/N)', 'No. of abortions', '  I   beta-HCG(mIU/mL)',\n",
              "       'II    beta-HCG(mIU/mL)', 'FSH(mIU/mL)', 'LH(mIU/mL)', 'FSH/LH',\n",
              "       'Hip(inch)', 'Waist(inch)', 'Waist:Hip Ratio', 'TSH (mIU/L)',\n",
              "       'AMH(ng/mL)', 'PRL(ng/mL)', 'Vit D3 (ng/mL)', 'PRG(ng/mL)',\n",
              "       'RBS(mg/dl)', 'Weight gain(Y/N)', 'hair growth(Y/N)',\n",
              "       'Skin darkening (Y/N)', 'Hair loss(Y/N)', 'Pimples(Y/N)',\n",
              "       'Fast food (Y/N)', 'Reg.Exercise(Y/N)', 'BP _Systolic (mmHg)',\n",
              "       'BP _Diastolic (mmHg)', 'Follicle No. (L)', 'Follicle No. (R)',\n",
              "       'Avg. F size (L) (mm)', 'Avg. F size (R) (mm)', 'Endometrium (mm)'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.fillna(0, inplace=True)"
      ],
      "metadata": {
        "id": "-_6B3iKWIxbu"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert non-numeric columns to numeric\n",
        "le = LabelEncoder()\n",
        "data['II    beta-HCG(mIU/mL)'] = pd.to_numeric(data['II    beta-HCG(mIU/mL)'], errors='coerce').fillna(0)\n",
        "data['AMH(ng/mL)'] = pd.to_numeric(data['AMH(ng/mL)'], errors='coerce').fillna(0)\n"
      ],
      "metadata": {
        "id": "KiCm9ENDaf27"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = data.drop(columns=['Sl. No', 'Patient File No.', 'PCOS (Y/N)', 'Unnamed: 44'])\n",
        "y = data['PCOS (Y/N)']"
      ],
      "metadata": {
        "id": "kvqJf7VkHjqW"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "EuV647YNJBoi"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = RandomForestClassifier(random_state=42)\n",
        "model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "o-Jhdar2JE_z",
        "outputId": "18e339d4-b6d7-4e2d-ee00-de5460a7aafa"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestClassifier(random_state=42)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(X_test)\n"
      ],
      "metadata": {
        "id": "8SeMCAZfJHBE"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kQHypqnzJKRU",
        "outputId": "48050606-fc1f-44d9-ea3c-0be9e5585191"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.8715596330275229\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conf_matrix = confusion_matrix(y_test, y_pred)\n",
        "print(\"Confusion Matrix:\")\n",
        "print(conf_matrix)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wIx4qJ5PJLzI",
        "outputId": "4c3750dc-439f-455d-9a72-73ae7616f0bc"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Confusion Matrix:\n",
            "[[72  5]\n",
            " [ 9 23]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x=\" Age (yrs)\", y=\"Marraige Status (Yrs)\", data=data, hue='PCOS (Y/N)', palette='husl')\n",
        "plt.title(\"Scatter plot of Age vs Marriage Status colored by PCOS\")\n",
        "plt.xlabel(\"Age (years)\")\n",
        "plt.ylabel(\"Marriage Status (years)\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 531
        },
        "id": "6gadUcwKJNif",
        "outputId": "d2a0476c-7f39-4c70-f215-f35d1a1df903"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data.columns)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wd8h91T7Jvcm",
        "outputId": "d79127f0-0255-4e65-c372-a5d64c0fdfd9"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Sl. No', 'Patient File No.', 'PCOS (Y/N)', ' Age (yrs)', 'Weight (Kg)',\n",
            "       'Height(Cm) ', 'BMI', 'Blood Group', 'Pulse rate(bpm) ',\n",
            "       'RR (breaths/min)', 'Hb(g/dl)', 'Cycle(R/I)', 'Cycle length(days)',\n",
            "       'Marraige Status (Yrs)', 'Pregnant(Y/N)', 'No. of abortions',\n",
            "       '  I   beta-HCG(mIU/mL)', 'II    beta-HCG(mIU/mL)', 'FSH(mIU/mL)',\n",
            "       'LH(mIU/mL)', 'FSH/LH', 'Hip(inch)', 'Waist(inch)', 'Waist:Hip Ratio',\n",
            "       'TSH (mIU/L)', 'AMH(ng/mL)', 'PRL(ng/mL)', 'Vit D3 (ng/mL)',\n",
            "       'PRG(ng/mL)', 'RBS(mg/dl)', 'Weight gain(Y/N)', 'hair growth(Y/N)',\n",
            "       'Skin darkening (Y/N)', 'Hair loss(Y/N)', 'Pimples(Y/N)',\n",
            "       'Fast food (Y/N)', 'Reg.Exercise(Y/N)', 'BP _Systolic (mmHg)',\n",
            "       'BP _Diastolic (mmHg)', 'Follicle No. (L)', 'Follicle No. (R)',\n",
            "       'Avg. F size (L) (mm)', 'Avg. F size (R) (mm)', 'Endometrium (mm)',\n",
            "       'Unnamed: 44'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "weight = df[(df[\"Weight gain(Y/N)\"]==1) & (df[\"Skin darkening (Y/N)\"]==0) & (df[\"Hair loss(Y/N)\"]==0)]\n",
        "skin = df[(df[\"Weight gain(Y/N)\"]==0) & (df[\"Skin darkening (Y/N)\"]==1) & (df[\"Hair loss(Y/N)\"]==0)]\n",
        "weight_skin = df[(df[\"Weight gain(Y/N)\"]==1) & (df[\"Skin darkening (Y/N)\"]==1) & (df[\"Hair loss(Y/N)\"]==0)]\n",
        "hairLoss = df[(df[\"Weight gain(Y/N)\"]==0) & (df[\"Skin darkening (Y/N)\"]==0) & (df[\"Hair loss(Y/N)\"]==1)]\n",
        "weight_hairLoss = df[(df[\"Weight gain(Y/N)\"]==1) & (df[\"Skin darkening (Y/N)\"]==0) & (df[\"Hair loss(Y/N)\"]==1)]\n",
        "skin_hairLoss = df[(df[\"Weight gain(Y/N)\"]==0) & (df[\"Skin darkening (Y/N)\"]==1) & (df[\"Hair loss(Y/N)\"]==1)]\n",
        "all_3 = df[(df[\"Weight gain(Y/N)\"]==1) & (df[\"Skin darkening (Y/N)\"]==1) & (df[\"Hair loss(Y/N)\"]==1)]\n"
      ],
      "metadata": {
        "id": "1GP1G5gBKMAR"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "skin = df[(df[\"Weight gain(Y/N)\"] == 0) & (df[\"Skin darkening (Y/N)\"] == 1) & (df[\"Hair loss(Y/N)\"] == 0)]\n"
      ],
      "metadata": {
        "id": "S7e6lwm4KdO1"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "skin_shape = skin.shape\n",
        "print(\"Shape of skin subset:\", skin_shape)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gNcTMDGSKlM2",
        "outputId": "2750ccd1-5e19-4f8c-974b-4a1603bb6d3d"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of skin subset: (37, 42)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "weight_skin.shape, weight_hairLoss.shape, skin_hairLoss.shape, all_3.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LGYwAwGlKsAS",
        "outputId": "b7544aec-9489-4773-fbbb-b464b7c47556"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((38, 42), (58, 42), (24, 42), (67, 42))"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_subsets = [weight, skin, weight_skin, hairLoss, weight_hairLoss, skin_hairLoss, all_3]\n",
        "sizes = []\n",
        "for dataframe in df_subsets:\n",
        "    sizes.append(dataframe.shape[0])\n",
        "\n",
        "print(\"Sizes of subsets:\", sizes)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5Q4Nx4kVKvLD",
        "outputId": "4d80122a-1c31-4d85-85ba-ac85d60bad9a"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sizes of subsets: [41, 37, 38, 96, 58, 24, 67]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "labels = (\"Weight_Gain\", \"Skin_Darkening\", \"Hair_Loss\")\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(10,10))\n",
        "v = venn3(subsets=sizes, set_labels=labels, ax=ax, alpha=0.6, set_colors=sns.color_palette(\"bright\"))\n",
        "\n",
        "for text in v.set_labels:\n",
        "    text.set_fontsize(12)\n",
        "\n",
        "ax.set_title(\"Venn Diagram for Weight Gain & Skin Darkening & Hair Loss\", size=20)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 633
        },
        "id": "-2CfeiMhK0Wt",
        "outputId": "468b2192-bcbe-4f95-a71f-3a79b19b2d03"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Assuming 'pcos_fast_food' is the column indicating fast food consumption\n",
        "# Convert fast food consumption to numeric values, replacing any non-numeric values with 0\n",
        "pcos_fast_food = pcos_fast_food.apply(pd.to_numeric, errors='coerce').fillna(0)\n",
        "\n",
        "# Define a threshold to determine if an individual consumes fast food\n",
        "fast_food_threshold = 1  # You may adjust this threshold based on your specific criteria\n",
        "\n",
        "# Create a new binary feature indicating fast food consumption\n",
        "df['Fast_Food_Consumption'] = (pcos_fast_food > fast_food_threshold).astype(int)\n",
        "\n",
        "# Now 'Fast_Food_Consumption' column contains binary values (0 or 1) indicating fast food consumption\n"
      ],
      "metadata": {
        "id": "oiehvTKWLmQ-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "outputId": "0b544f7a-a947-4b74-fa1f-41427b5a9812"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'pcos_fast_food' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-29-f9a1b346a031>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Assuming 'pcos_fast_food' is the column indicating fast food consumption\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Convert fast food consumption to numeric values, replacing any non-numeric values with 0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mpcos_fast_food\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpcos_fast_food\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numeric\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'coerce'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Define a threshold to determine if an individual consumes fast food\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pcos_fast_food' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.ticker as mtick\n",
        "\n",
        "# Plot the distribution of patients who have PCOS and have eaten junk food\n",
        "colors = ['#daa520', '#065535']\n",
        "ax = (pcos_junk_food['Predictions'].value_counts() * 100.0 / len(pcos_junk_food)).plot(kind='bar', stacked=True,\n",
        "                                                                                      rot=0,\n",
        "                                                                                      color=colors)\n",
        "ax.yaxis.set_major_formatter(mtick.PercentFormatter())\n",
        "ax.set_xlabel('Prediction')\n",
        "ax.set_ylabel('% Patients')\n",
        "ax.set_title('Patient Distribution (PCOS and Junk Food)')\n",
        "\n",
        "totals = []\n",
        "\n",
        "for i in ax.patches:\n",
        "    totals.append(i.get_width())\n",
        "\n",
        "total = sum(totals)\n",
        "\n",
        "for i in ax.patches:\n",
        "    ax.text(i.get_x() + .15, i.get_height() - 3.5, \\\n",
        "            str(round((i.get_height() / total), 1)) + '%',\n",
        "            fontsize=12,\n",
        "            color='white',\n",
        "            weight='bold')\n",
        "\n",
        "# Create custom legend\n",
        "legend_labels = ['PCOS and Junk Food (1)', 'PCOS without Junk Food (0)']\n",
        "legend_colors = ['#daa520', '#065535']\n",
        "legend_handles = [plt.Rectangle((0,0),1,1, color=color) for color in legend_colors]\n",
        "ax.legend(legend_handles, legend_labels)\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "pwFvucdpLfyr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VQoS2QjlHySj",
        "outputId": "1889fd46-ea71-4357-bf77-531b7a22f0c9"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['PCOS (Y/N)', ' Age (yrs)', 'Weight (Kg)', 'Height(Cm)', 'BMI',\n",
            "       'Blood Group', 'Pulse rate(bpm) ', 'RR (breaths/min)', 'Hb(g/dl)',\n",
            "       'Cycle(R/I)', 'Cycle length(days)', 'Marraige Status (Yrs)',\n",
            "       'Pregnant(Y/N)', 'No. of abortions', '  I   beta-HCG(mIU/mL)',\n",
            "       'II    beta-HCG(mIU/mL)', 'FSH(mIU/mL)', 'LH(mIU/mL)', 'FSH/LH',\n",
            "       'Hip(inch)', 'Waist(inch)', 'Waist:Hip Ratio', 'TSH (mIU/L)',\n",
            "       'AMH(ng/mL)', 'PRL(ng/mL)', 'Vit D3 (ng/mL)', 'PRG(ng/mL)',\n",
            "       'RBS(mg/dl)', 'Weight gain(Y/N)', 'hair growth(Y/N)',\n",
            "       'Skin darkening (Y/N)', 'Hair loss(Y/N)', 'Pimples(Y/N)',\n",
            "       'Fast food (Y/N)', 'Reg.Exercise(Y/N)', 'BP _Systolic (mmHg)',\n",
            "       'BP _Diastolic (mmHg)', 'Follicle No. (L)', 'Follicle No. (R)',\n",
            "       'Avg. F size (L) (mm)', 'Avg. F size (R) (mm)', 'Endometrium (mm)',\n",
            "       'BMI Category', 'Height(M)', 'Obese', 'Extra_Chance_of_PCOS'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.ticker as mtick\n",
        "\n",
        "# Create a single plot\n",
        "fig, ax = plt.subplots(figsize=(10, 8))\n",
        "\n",
        "# Distribution of patients based on each attribute\n",
        "colors = ['salmon', 'skyblue']\n",
        "width = 0.2  # Width of each bar\n",
        "indices = [0, 1, 2, 3]  # Indices for positioning bars\n",
        "\n",
        "# Plot bars for each attribute\n",
        "for i, col in enumerate(['Fast food (Y/N)', 'Pimples(Y/N)', 'Skin darkening (Y/N)', 'Hair loss(Y/N)']):\n",
        "    counts = df[col].value_counts(normalize=True) * 100.0\n",
        "    ax.bar(indices[i], counts[0], width, color=colors[0], label='Without PCOS' if i == 0 else None)\n",
        "    ax.bar(indices[i], counts[1], width, color=colors[1], bottom=counts[0], label='With PCOS' if i == 0 else None)\n",
        "\n",
        "    # Add text annotations\n",
        "    for j, percentage in enumerate(counts):\n",
        "        if i == 0:  # For Fast food attribute\n",
        "            ax.text(indices[i], counts[0] / 2, f'{counts[0]:.1f}%', ha='center', va='center', color='white')\n",
        "            ax.text(indices[i], counts[0] + counts[1] / 2, f'{counts[1]:.1f}%', ha='center', va='center', color='white')\n",
        "        else:\n",
        "            ax.text(indices[i], counts[:j+1].sum() - percentage / 2, f'{percentage:.1f}%', ha='center', va='center', color='white')\n",
        "\n",
        "# Set labels and title\n",
        "ax.set_xticks(indices)\n",
        "ax.set_xticklabels(['Fast food', 'Pimples', 'Skin darkening', 'Hair loss'])\n",
        "ax.set_ylabel('% Patients')\n",
        "ax.set_title('Patient Distribution')\n",
        "\n",
        "# Add legend\n",
        "ax.legend()\n",
        "\n",
        "# Show plot\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "txDS41J4NLP9",
        "outputId": "eeb0491d-dbef-4167-f69a-537961c55c7c"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Rename the column 'Height(Cm) ' to 'Height(Cm)'\n",
        "df.rename(columns={'Height(Cm) ': 'Height(Cm)'}, inplace=True)\n",
        "\n",
        "# Calculate BMI\n",
        "df['BMI'] = df['Weight (Kg)'] / (df['Height(Cm)'] / 100) ** 2\n",
        "\n",
        "# Define BMI categories\n",
        "bmi_categories = {\n",
        "    'Underweight': (0, 18.5),\n",
        "    'Normal weight': (18.5, 24.9),\n",
        "    'Overweight': (25, 29.9),\n",
        "    'Obese': (30, float('inf'))\n",
        "}\n",
        "\n",
        "# Classify individuals based on BMI categories\n",
        "def classify_bmi(bmi):\n",
        "    for category, (lower, upper) in bmi_categories.items():\n",
        "        if lower <= bmi < upper:\n",
        "            return category\n",
        "    return 'Unknown'\n",
        "\n",
        "df['BMI Category'] = df['BMI'].apply(classify_bmi)\n",
        "\n",
        "# Analyze the distribution of PCOS cases within each BMI category\n",
        "pcos_bmi_distribution = df.groupby(['BMI Category', 'PCOS (Y/N)']).size().unstack(fill_value=0)\n",
        "print(\"Distribution of PCOS cases within each BMI category:\")\n",
        "print(pcos_bmi_distribution)\n",
        "\n",
        "# Calculate the percentage of PCOS cases within each BMI category\n",
        "pcos_percentage = pcos_bmi_distribution.div(pcos_bmi_distribution.sum(axis=1), axis=0) * 100\n",
        "print(\"\\nPercentage of PCOS cases within each BMI category:\")\n",
        "print(pcos_percentage)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0ho6LQYLOoHY",
        "outputId": "1b15338a-084b-4913-86a3-9a41ed4977a0"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Distribution of PCOS cases within each BMI category:\n",
            "PCOS (Y/N)       0   1\n",
            "BMI Category          \n",
            "Normal weight  199  72\n",
            "Obese           19  24\n",
            "Overweight     114  69\n",
            "Underweight     26  10\n",
            "Unknown          6   2\n",
            "\n",
            "Percentage of PCOS cases within each BMI category:\n",
            "PCOS (Y/N)             0          1\n",
            "BMI Category                       \n",
            "Normal weight  73.431734  26.568266\n",
            "Obese          44.186047  55.813953\n",
            "Overweight     62.295082  37.704918\n",
            "Underweight    72.222222  27.777778\n",
            "Unknown        75.000000  25.000000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the column names\n",
        "print(\"Column Names:\")\n",
        "print(df.columns)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9-cVndi-u-OI",
        "outputId": "c6adc768-8b9e-48fd-8ae0-a5e6f1d65882"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Column Names:\n",
            "Index(['PCOS (Y/N)', ' Age (yrs)', 'Weight (Kg)', 'Height(Cm)', 'BMI',\n",
            "       'Blood Group', 'Pulse rate(bpm) ', 'RR (breaths/min)', 'Hb(g/dl)',\n",
            "       'Cycle(R/I)', 'Cycle length(days)', 'Marraige Status (Yrs)',\n",
            "       'Pregnant(Y/N)', 'No. of abortions', '  I   beta-HCG(mIU/mL)',\n",
            "       'II    beta-HCG(mIU/mL)', 'FSH(mIU/mL)', 'LH(mIU/mL)', 'FSH/LH',\n",
            "       'Hip(inch)', 'Waist(inch)', 'Waist:Hip Ratio', 'TSH (mIU/L)',\n",
            "       'AMH(ng/mL)', 'PRL(ng/mL)', 'Vit D3 (ng/mL)', 'PRG(ng/mL)',\n",
            "       'RBS(mg/dl)', 'Weight gain(Y/N)', 'hair growth(Y/N)',\n",
            "       'Skin darkening (Y/N)', 'Hair loss(Y/N)', 'Pimples(Y/N)',\n",
            "       'Fast food (Y/N)', 'Reg.Exercise(Y/N)', 'BP _Systolic (mmHg)',\n",
            "       'BP _Diastolic (mmHg)', 'Follicle No. (L)', 'Follicle No. (R)',\n",
            "       'Avg. F size (L) (mm)', 'Avg. F size (R) (mm)', 'Endometrium (mm)',\n",
            "       'BMI Category'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check the column names in your DataFrame\n",
        "print(df.columns)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KrQ76FJ7PFVo",
        "outputId": "38fada00-d055-4070-a122-02c66668771c"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['PCOS (Y/N)', ' Age (yrs)', 'Weight (Kg)', 'Height(Cm)', 'BMI',\n",
            "       'Blood Group', 'Pulse rate(bpm) ', 'RR (breaths/min)', 'Hb(g/dl)',\n",
            "       'Cycle(R/I)', 'Cycle length(days)', 'Marraige Status (Yrs)',\n",
            "       'Pregnant(Y/N)', 'No. of abortions', '  I   beta-HCG(mIU/mL)',\n",
            "       'II    beta-HCG(mIU/mL)', 'FSH(mIU/mL)', 'LH(mIU/mL)', 'FSH/LH',\n",
            "       'Hip(inch)', 'Waist(inch)', 'Waist:Hip Ratio', 'TSH (mIU/L)',\n",
            "       'AMH(ng/mL)', 'PRL(ng/mL)', 'Vit D3 (ng/mL)', 'PRG(ng/mL)',\n",
            "       'RBS(mg/dl)', 'Weight gain(Y/N)', 'hair growth(Y/N)',\n",
            "       'Skin darkening (Y/N)', 'Hair loss(Y/N)', 'Pimples(Y/N)',\n",
            "       'Fast food (Y/N)', 'Reg.Exercise(Y/N)', 'BP _Systolic (mmHg)',\n",
            "       'BP _Diastolic (mmHg)', 'Follicle No. (L)', 'Follicle No. (R)',\n",
            "       'Avg. F size (L) (mm)', 'Avg. F size (R) (mm)', 'Endometrium (mm)',\n",
            "       'BMI Category'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 1: Calculate BMI\n",
        "df['Height(M)'] = df['Height(Cm)'] / 100  # Convert height from cm to m\n",
        "df['BMI'] = df['Weight (Kg)'] / (df['Height(M)'] ** 2)  # Calculate BMI\n",
        "\n",
        "# Step 2: Determine Obesity\n",
        "df['Obese'] = df['BMI'] >= 30  # Define obesity as BMI >= 30\n",
        "\n",
        "# Step 3: Determine Extra Chance of PCOS due to Obesity and Lack of Exercise\n",
        "df['Extra_Chance_of_PCOS'] = (df['Obese'] & (df['Reg.Exercise(Y/N)'] == 'N')) * 1  # 1 if both conditions met, 0 otherwise\n",
        "# Display the calculated BMI and extra chance of PCOS\n",
        "print(df[['Height(Cm)', 'Weight (Kg)', 'BMI', 'Obese', 'Reg.Exercise(Y/N)', 'Extra_Chance_of_PCOS']])\n",
        "\n",
        "# Create a DataFrame with BMI and PCOS status\n",
        "bmi_pcos_df = pd.DataFrame({'BMI': df['BMI'], 'PCOS (Y/N)': df['PCOS (Y/N)']})\n",
        "\n",
        "# Display the first few rows of the DataFrame\n",
        "print(bmi_pcos_df.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mEmURhxRPR5B",
        "outputId": "171d6790-4d3c-43e7-c1e3-07802929f43d"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Height(Cm)  Weight (Kg)        BMI  Obese  Reg.Exercise(Y/N)  \\\n",
            "0       152.000         44.6  19.304017  False                  0   \n",
            "1       161.500         65.0  24.921163  False                  0   \n",
            "2       165.000         68.8  25.270891  False                  0   \n",
            "3       148.000         65.0  29.674945  False                  0   \n",
            "4       161.000         52.0  20.060954  False                  0   \n",
            "..          ...          ...        ...    ...                ...   \n",
            "536     164.592         50.0  18.456637  False                  0   \n",
            "537     158.000         63.2  25.316456  False                  0   \n",
            "538     152.000         54.0  23.372576  False                  0   \n",
            "539     150.000         50.0  22.222222  False                  0   \n",
            "540     165.000         82.0  30.119376   True                  0   \n",
            "\n",
            "     Extra_Chance_of_PCOS  \n",
            "0                       0  \n",
            "1                       0  \n",
            "2                       0  \n",
            "3                       0  \n",
            "4                       0  \n",
            "..                    ...  \n",
            "536                     0  \n",
            "537                     0  \n",
            "538                     0  \n",
            "539                     0  \n",
            "540                     0  \n",
            "\n",
            "[541 rows x 6 columns]\n",
            "         BMI  PCOS (Y/N)\n",
            "0  19.304017           0\n",
            "1  24.921163           0\n",
            "2  25.270891           1\n",
            "3  29.674945           0\n",
            "4  20.060954           0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove the extra space at the end of the column name 'Height(Cm) '\n",
        "df.rename(columns={'Height(Cm) ': 'Height(Cm)'}, inplace=True)\n"
      ],
      "metadata": {
        "id": "bra5pgabvcBW"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Select relevant columns for analysis\n",
        "pcos_features = ['Cycle length(days)', 'FSH(mIU/mL)', 'LH(mIU/mL)',\n",
        "                 'Follicle No. (L)', 'Follicle No. (R)', 'Endometrium (mm)']\n",
        "\n",
        "# Plot distributions of features by PCOS status\n",
        "for feature in pcos_features:\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    sns.histplot(data=df, x=feature, hue='PCOS (Y/N)', kde=True, bins=20, palette='pastel')\n",
        "    plt.title(f'Distribution of {feature} by PCOS status')\n",
        "    plt.xlabel(feature)\n",
        "    plt.ylabel('Count')\n",
        "    plt.legend(title='PCOS')\n",
        "    plt.show()\n"
      ],
      "metadata": {
        "id": "yOhSQ_8lRfUw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score, classification_report\n",
        "\n",
        "# Select relevant features and target variable\n",
        "X = df[['Follicle No. (L)', 'Follicle No. (R)', 'Endometrium (mm)']]\n",
        "y = df['PCOS (Y/N)']\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Train a logistic regression model\n",
        "model = LogisticRegression()\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the testing set\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluate the model\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", accuracy)\n",
        "print(classification_report(y_test, y_pred))\n"
      ],
      "metadata": {
        "id": "kZQ9vzmASEGQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "The logistic regression model achieved an accuracy of approximately 80.73% on the testing set. Here's the detailed classification report:\n",
        "\n",
        "Precision for class 0 (Non-PCOS): 86%\n",
        "Precision for class 1 (PCOS): 68%\n",
        "Recall for class 0: 87%\n",
        "Recall for class 1: 66%\n",
        "F1-score for class 0: 86%\n",
        "F1-score for class 1: 67%\n",
        "The macro-average F1-score is approximately 77%, and the weighted-average F1-score is approximately 81%. These metrics provide a comprehensive view of the model's performance across both classes."
      ],
      "metadata": {
        "id": "VjOeZfacSQGa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import confusion_matrix\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Initialize and train the model (Random Forest Classifier)\n",
        "model = RandomForestClassifier(random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the test set\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Create a confusion matrix\n",
        "conf_matrix = confusion_matrix(y_test, y_pred)\n",
        "\n",
        "# Plot the confusion matrix\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.set(font_scale=1.2)\n",
        "sns.heatmap(conf_matrix, annot=True, fmt='d', cmap=sns.color_palette(['skyblue', 'salmon']), cbar=False,\n",
        "            xticklabels=labels,\n",
        "            yticklabels=labels)\n",
        "plt.title('Confusion Matrix')\n",
        "plt.xlabel('Predicted Label')\n",
        "plt.ylabel('True Label')\n",
        "plt.text(0.5, -0.2, 'True Label', ha='center', va='center')\n",
        "plt.text(-0.2, 0.5, 'Predicted Label', ha='center', va='center', rotation='vertical')\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "hnShQeTkT-Ah"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "code snippet offers a more detailed and practical implementation, including data splitting, model training, prediction, and visualization.\n",
        " includes detailed implementation steps, covering data splitting, model training, prediction, and visualization, making it more comprehensive and suitable for immediate use.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "bhYtj4JEUOAY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.columns)"
      ],
      "metadata": {
        "id": "UWvidG1EVk43"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.preprocessing import OneHotEncoder, LabelEncoder\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"PCOS_data.csv\")\n",
        "\n",
        "# Handle missing values for numerical columns\n",
        "numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns\n",
        "imputer = SimpleImputer(strategy='mean')\n",
        "df[numeric_columns] = imputer.fit_transform(df[numeric_columns])\n",
        "\n",
        "# Encode categorical variables\n",
        "categorical_columns = df.select_dtypes(include=['object']).columns\n",
        "label_encoders = {}\n",
        "for col in categorical_columns:\n",
        "    le = LabelEncoder()\n",
        "    df[col] = le.fit_transform(df[col])\n",
        "    label_encoders[col] = le\n",
        "\n",
        "# Split features and target variable\n",
        "X = df.drop(columns=['PCOS (Y/N)'])\n",
        "y = df['PCOS (Y/N)']\n",
        "\n",
        "# Split dataset into train and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"
      ],
      "metadata": {
        "id": "j2_NN2b-V0qh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "\n",
        "# Initialize models\n",
        "log_reg_model = LogisticRegression()\n",
        "svm_model = SVC()\n",
        "gbt_model = GradientBoostingClassifier()\n",
        "rf_model = RandomForestClassifier()\n",
        "nn_model = MLPClassifier()\n",
        "\n",
        "# Train logistic regression model\n",
        "log_reg_model.fit(X_train, y_train)\n",
        "log_reg_pred = log_reg_model.predict(X_test)\n",
        "\n",
        "# Train support vector machine model\n",
        "svm_model.fit(X_train, y_train)\n",
        "svm_pred = svm_model.predict(X_test)\n",
        "\n",
        "# Train gradient boosted trees model\n",
        "gbt_model.fit(X_train, y_train)\n",
        "gbt_pred = gbt_model.predict(X_test)\n",
        "\n",
        "# Train random forests model\n",
        "rf_model.fit(X_train, y_train)\n",
        "rf_pred = rf_model.predict(X_test)\n",
        "\n",
        "# Train neural network classifier\n",
        "nn_model.fit(X_train, y_train)\n",
        "nn_pred = nn_model.predict(X_test)\n",
        "\n",
        "# Evaluate models\n",
        "models = ['Logistic Regression', 'Support Vector Machine', 'Gradient Boosted Trees', 'Random Forests', 'Neural Network']\n",
        "predictions = [log_reg_pred, svm_pred, gbt_pred, rf_pred, nn_pred]\n",
        "\n",
        "for model, pred in zip(models, predictions):\n",
        "    accuracy = accuracy_score(y_test, pred)\n",
        "    precision = precision_score(y_test, pred)\n",
        "    recall = recall_score(y_test, pred)\n",
        "    f1_score_val = f1_score(y_test, pred)  # Renamed variable to avoid conflict\n",
        "    print(f\"Model: {model}\")\n",
        "    print(f\"Accuracy: {accuracy}\")\n",
        "    print(f\"Precision: {precision}\")\n",
        "    print(f\"Recall: {recall}\")\n",
        "    print(f\"F1-score: {f1_score_val}\")\n",
        "    print(\"------------------------\")\n"
      ],
      "metadata": {
        "id": "MCfpolzfV8ex"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Define model names and their corresponding metrics\n",
        "models = ['Logistic Regression', 'Support Vector Machine', 'Gradient Boosted Trees', 'Random Forests', 'Neural Network']\n",
        "accuracy = [0.789, 0.716, 0.890, 0.890, 0.752]\n",
        "precision = [0.655, 1.0, 0.833, 0.857, 0.581]\n",
        "recall = [0.594, 0.031, 0.781, 0.75, 0.562]\n",
        "f1_score = [0.623, 0.061, 0.806, 0.800, 0.571]\n",
        "\n",
        "# Plotting\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Accuracy plot\n",
        "plt.barh(models, accuracy, color='skyblue', label='Accuracy')\n",
        "\n",
        "# Precision plot\n",
        "plt.barh(models, precision, color='salmon', label='Precision')\n",
        "\n",
        "# Recall plot\n",
        "plt.barh(models, recall, color='lightgreen', label='Recall')\n",
        "\n",
        "# F1-score plot\n",
        "plt.barh(models, f1_score, color='orange', label='F1-score')\n",
        "\n",
        "plt.xlabel('Metrics')\n",
        "plt.ylabel('Models')\n",
        "plt.title('Comparison of Machine Learning Models')\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "kfnWesj2WQXi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Define models and their metrics\n",
        "models = ['Logistic Regression', 'Support Vector Machine', 'Gradient Boosted Trees', 'Random Forests', 'Neural Network']\n",
        "metrics = ['Accuracy', 'Precision', 'Recall', 'F1-score']\n",
        "\n",
        "# Mean values of metrics for each model\n",
        "accuracy_means = [0.788, 0.716, 0.890, 0.890, 0.752]\n",
        "precision_means = [0.655, 1.0, 0.833, 0.857, 0.581]\n",
        "recall_means = [0.594, 0.031, 0.781, 0.750, 0.563]\n",
        "f1_score_means = [0.623, 0.061, 0.806, 0.800, 0.571]\n",
        "\n",
        "# Plotting\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "plt.plot(models, accuracy_means, marker='o', label='Accuracy')\n",
        "plt.plot(models, precision_means, marker='o', label='Precision')\n",
        "plt.plot(models, recall_means, marker='o', label='Recall')\n",
        "plt.plot(models, f1_score_means, marker='o', label='F1-score')\n",
        "\n",
        "# Add labels and title\n",
        "plt.xlabel('Machine Learning Models', fontweight='bold')\n",
        "plt.ylabel('Mean Value', fontweight='bold')\n",
        "plt.title('Performance of Machine Learning Models by Metrics', fontweight='bold')\n",
        "\n",
        "# Add legend\n",
        "plt.legend()\n",
        "\n",
        "# Show plot\n",
        "plt.xticks(rotation=45)\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        },
        "id": "adN9usuqW5WH",
        "outputId": "0307fc67-60f3-49ba-8753-b501f291c70e"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check the data types of all columns\n",
        "print(df.dtypes)\n",
        "\n",
        "# Convert all columns to numeric (if possible)\n",
        "df = df.apply(pd.to_numeric, errors='coerce')\n",
        "\n",
        "# Drop rows with NaN values resulting from conversion\n",
        "df.dropna(inplace=True)\n",
        "\n",
        "\n",
        "\n",
        "# Separate features and target variable\n",
        "X = df.drop('PCOS (Y/N)', axis=1)\n",
        "y = df['PCOS (Y/N)']\n",
        "\n",
        "# Step 3: Perform Recursive Feature Elimination (RFE)\n",
        "# Initialize the RandomForestClassifier as the estimator\n",
        "estimator = RandomForestClassifier(random_state=42)\n",
        "\n",
        "# Initialize RFE\n",
        "rfe = RFE(estimator, n_features_to_select=10)\n",
        "\n",
        "# Fit RFE on the dataset\n",
        "rfe.fit(X, y)\n",
        "\n",
        "# Get the selected features\n",
        "selected_features = X.columns[rfe.support_]\n",
        "\n",
        "# Step 4: Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X[selected_features], y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Step 5: Implement Stacking Classifier using the selected features\n",
        "# Define base estimators\n",
        "base_estimators = [\n",
        "    ('rf', RandomForestClassifier(n_estimators=100, random_state=42)),\n",
        "    ('lr', LogisticRegression(random_state=42))\n",
        "]\n",
        "\n",
        "# Define the meta-estimator\n",
        "meta_estimator = LogisticRegression()\n",
        "\n",
        "# Initialize the Stacking Classifier\n",
        "stacking_classifier = StackingClassifier(estimators=base_estimators, final_estimator=meta_estimator)\n",
        "\n",
        "# Step 6: Train the Stacking Classifier\n",
        "stacking_classifier.fit(X_train, y_train)\n",
        "\n",
        "# Step 7: Evaluate the performance of the model\n",
        "# Make predictions\n",
        "y_pred = stacking_classifier.predict(X_test)\n",
        "\n",
        "# Calculate evaluation metrics\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "precision = precision_score(y_test, y_pred)\n",
        "recall = recall_score(y_test, y_pred)\n",
        "f1 = f1_score(y_test, y_pred)\n",
        "\n",
        "# Print evaluation metrics\n",
        "print(f\"Accuracy: {accuracy}\")\n",
        "print(f\"Precision: {precision}\")\n",
        "print(f\"Recall: {recall}\")\n",
        "print(f\"F1-score: {f1}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8_rtAiP1GHxG",
        "outputId": "4e4f8456-3d15-4dab-d37c-969644a59272"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PCOS (Y/N)                  int64\n",
            " Age (yrs)                  int64\n",
            "Weight (Kg)               float64\n",
            "Height(Cm)                float64\n",
            "BMI                       float64\n",
            "Blood Group                 int64\n",
            "Pulse rate(bpm)             int64\n",
            "RR (breaths/min)            int64\n",
            "Hb(g/dl)                  float64\n",
            "Cycle(R/I)                  int64\n",
            "Cycle length(days)          int64\n",
            "Marraige Status (Yrs)     float64\n",
            "Pregnant(Y/N)               int64\n",
            "No. of abortions            int64\n",
            "  I   beta-HCG(mIU/mL)    float64\n",
            "II    beta-HCG(mIU/mL)    float64\n",
            "FSH(mIU/mL)               float64\n",
            "LH(mIU/mL)                float64\n",
            "FSH/LH                    float64\n",
            "Hip(inch)                   int64\n",
            "Waist(inch)                 int64\n",
            "Waist:Hip Ratio           float64\n",
            "TSH (mIU/L)               float64\n",
            "AMH(ng/mL)                float64\n",
            "PRL(ng/mL)                float64\n",
            "Vit D3 (ng/mL)            float64\n",
            "PRG(ng/mL)                float64\n",
            "RBS(mg/dl)                float64\n",
            "Weight gain(Y/N)            int64\n",
            "hair growth(Y/N)            int64\n",
            "Skin darkening (Y/N)        int64\n",
            "Hair loss(Y/N)              int64\n",
            "Pimples(Y/N)                int64\n",
            "Fast food (Y/N)           float64\n",
            "Reg.Exercise(Y/N)           int64\n",
            "BP _Systolic (mmHg)         int64\n",
            "BP _Diastolic (mmHg)        int64\n",
            "Follicle No. (L)            int64\n",
            "Follicle No. (R)            int64\n",
            "Avg. F size (L) (mm)      float64\n",
            "Avg. F size (R) (mm)      float64\n",
            "Endometrium (mm)          float64\n",
            "dtype: object\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.9259259259259259\n",
            "Precision: 0.9642857142857143\n",
            "Recall: 0.7941176470588235\n",
            "F1-score: 0.8709677419354839\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    }
  ]
}